{"version":3,"sources":["webpack:///./src/lib/moving_average_2d.js","webpack:///./src/lib/absolute_2d_speed_sensor.js","webpack:///./src/lib/geolocator.js","webpack:///./src/lib/geolocation_ar_controls.js","webpack:///src/components/ar-component.vue","webpack:///./src/components/ar-component.vue?a68d","webpack:///./src/components/ar-component.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["MovingAverage2D","_size","classCallCheck_default","this","windowSize","queue","Array","_p","p","x","y","length","push","shift","n","reduce","acc","x_square","avg","getAvg","Math","sqrt","Absolute2DSpeedSensor","laSensor","LinearAccelerationSensor","frequency","oriSensor","AbsoluteOrientationSensor","referenceFrame","offsetWindowSize","addEventListener","onReading","bind","onOriReading","ori","speed","pos","lastAccel","accelOffset","accel","lastSensorTimeStamp","start","e","integral","p1","p2","dt","newAccel","correctAccel","timestamp","len","offset","newSpeed","getLast","newPos","quaternion","_speed$getAvg","accuracy","getVar","norm","_accel$getAvg","_pos$getAvg","_speed","flush","_accel","z","qx","qy","qz","qw","ix","iy","iz","iw","Geolocator","speedSensor","geo_options","enableHighAccuracy","maximumAge","timeout","watchID","navigator","geolocation","watchPosition","_updateCurrentPositionKalman","_handleError","posUpdateCB","currentPosition","NaN","longitude","latitude","variance","speedFromGPS","ready","callback","getCurrentPosition","_currentPosition","_currentPosition2","coords","_currentPosition3","xy_measure","_convertGeolocation","sensorPosAccuracy","readPosition","posBySensor","heading","cos","radians","PI","sin","reset","K","xy_estimate","err","console","log","code","message","clearWatch","r","lon","lat","a","b","long0","k0","e2","nu","pow","tan","deg","GeolocationARControls","_camera","camera","options","sensor","handleSensorReading","handleSensorError","THREE","geolocator","handleGeolocationUpdate","newPosition","isLocationFixed","fromArray","event","error","name","copy","position","ar_component","data","scene","axisHepler","vground","renderer","controls","spriteMaterial","cameraHeight","cameraFoV","started","cameraReady","methods","initCamera","self","getCameraStream","initAR","$refs","capture","videoHeight","window","innerHeight","scaleFactor","atan","referenceCCDSize","three_module","innerWidth","set","geolocation_ar_controls","groundGeometry","groundMaterial","color","wireframe","add","axesHelper","spriteMap","load","map","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","content","appendChild","domElement","onWindowResize","animate","requestAnimationFrame","update","render","addMarker","_camera$position","sprite","scale","aspect","updateProjectionMatrix","mediaDevices","getUserMedia","video","height","min","facingMode","exact","then","stream","srcObject","catch","alert","constraint","created","components_ar_component","_vm","_h","$createElement","_c","_self","ref","attrs","id","autoplay","_v","staticClass","on","click","_e","staticRenderFns","src_components_ar_component","__webpack_require__","normalizeComponent","ssrContext","Vue","use","Router","routes","path","component","ARComponent","el","components","ar-component"],"mappings":"kMAAqBA,aACnB,SAAAA,EAAYC,GAAOC,IAAAC,KAAAH,GACjBG,KAAKC,WAAaH,EAClBE,KAAKE,MAAQ,IAAIC,+CAEdC,GACH,IAAIC,GACFC,EAAGF,EAAGE,EACNC,EAAGH,EAAGG,GAEJP,KAAKE,MAAMM,OAASR,KAAKC,WAC3BD,KAAKE,MAAMO,KAAKJ,IAEhBL,KAAKE,MAAMQ,QACXV,KAAKE,MAAMO,KAAKJ,qCAIlB,GAA0B,IAAtBL,KAAKE,MAAMM,OAAc,KAAM,0BACnC,IAAIG,EAAIX,KAAKE,MAAMM,OACnB,OAAOR,KAAKE,MAAMU,OAChB,SAASC,EAAKR,GAGZ,OAFAQ,EAAA,GAAYR,EAAEC,EAAIK,EAClBE,EAAA,GAAYR,EAAEE,EAAII,EACXE,IAEPP,EAAG,EAAGC,EAAG,qCAIb,GAA0B,IAAtBP,KAAKE,MAAMM,OAAc,KAAM,0BACnC,IAAIG,EAAIX,KAAKE,MAAMM,OACfM,EAAWd,KAAKE,MAAMU,OAAO,SAACC,EAAKR,GACrC,OAAOQ,EAAMR,EAAEC,EAAID,EAAEC,GACpB,GACCS,EAAMf,KAAKgB,SACf,OAAOF,EAAWH,EAAII,EAAIT,EAAIS,EAAIT,oCAGlC,GAA0B,IAAtBN,KAAKE,MAAMM,OAAc,KAAM,0BACnC,OAAOR,KAAKE,MAAMF,KAAKE,MAAMM,OAAS,iCAGtC,OAAOR,KAAKE,MAAMM,uCAGlBR,KAAKE,uCAEDG,GACJ,OAAOY,KAAKC,KAAKb,EAAEC,EAAID,EAAEC,EAAID,EAAEE,EAAIF,EAAEE,YC/CpBY,aACnB,SAAAA,IAAcpB,IAAAC,KAAAmB,GACZnB,KAAKoB,SAAW,IAAIC,0BAA2BC,UAAW,KAC1DtB,KAAKuB,UAAY,IAAIC,2BACnBF,UAAW,GACXG,eAAgB,WAGlBzB,KAAKC,WAAa,GAClBD,KAAK0B,iBAAmB,IACxB1B,KAAKoB,SAASO,iBAAiB,UAAW3B,KAAK4B,UAAUC,KAAK7B,OAC9DA,KAAKuB,UAAUI,iBAAiB,UAAW3B,KAAK8B,aAAaD,KAAK7B,OAClEA,KAAK+B,KAAO,EAAG,EAAG,EAAG,GAErB/B,KAAKgC,MAAQ,IAAInC,EAAgBG,KAAKC,YACtCD,KAAKiC,IAAM,IAAIpC,EAAgBG,KAAKC,YACpCD,KAAKkC,WAAa5B,EAAE,EAAEC,EAAE,GACxBP,KAAKmC,YAAc,IAAItC,EAAgBG,KAAK0B,kBAC5C1B,KAAKoC,MAAQ,IAAIvC,EAAgBG,KAAKC,YACtCD,KAAKgC,MAAMvB,MAAOH,EAAG,EAAGC,EAAG,IAC3BP,KAAKiC,IAAIxB,MAAOH,EAAG,EAAGC,EAAG,IAEzBP,KAAKqC,qBAAuB,EAC5BrC,KAAKoB,SAASkB,QACdtC,KAAKuB,UAAUe,sDAEPC,GACR,SAASC,EAASnC,EAAGoC,EAAIC,EAAIC,GAC3B,OACErC,EAAGD,EAAEC,GAAMmC,EAAGnC,EAAIoC,EAAGpC,GAAK,EAAKqC,EAC/BpC,EAAGF,EAAEE,GAAMkC,EAAGlC,EAAImC,EAAGnC,GAAK,EAAKoC,GAGnC,IAAIC,EAAW5C,KAAK6C,aAAa7C,KAAKoB,SAAUpB,KAAK+B,KAErD,IAAkC,IAA9B/B,KAAKqC,oBACPrC,KAAKqC,oBAAsBrC,KAAKoB,SAAS0B,UACzC9C,KAAKoC,MAAM3B,KAAKmC,GAChB5C,KAAKmC,YAAY1B,KAAKmC,OACjB,CACL,IAAID,GAAM3C,KAAKoB,SAAS0B,UAAY9C,KAAKqC,qBAAuB,IAGhE,GAFArC,KAAKoC,MAAM3B,KAAKmC,GAChB5C,KAAKmC,YAAY1B,KAAKmC,GACnB5C,KAAKoC,MAAMW,QAAU/C,KAAKC,WAAW,CACtC2C,EAAW5C,KAAKoC,MAAMpB,SACtB,IAAIgC,EAAShD,KAAKmC,YAAYnB,SAC9B4B,EAAStC,GAAK0C,EAAO1C,EACrBsC,EAASrC,GAAKyC,EAAOzC,EAGrB,IAAI0C,EAAWT,EACbxC,KAAKgC,MAAMkB,UACXlD,KAAKkC,UACLU,EACAD,GAEF3C,KAAKgC,MAAMvB,KAAKwC,GAGhB,IAAIE,EAASX,EACXxC,KAAKiC,IAAIiB,UACTlD,KAAKgC,MAAMkB,UACXD,EACAN,GAEF3C,KAAKiC,IAAIxB,KAAK0C,GACdnD,KAAKkC,UAAYU,EAEnB5C,KAAKqC,oBAAsBrC,KAAKoB,SAAS0B,kDAuC3C9C,KAAK+B,IAAM/B,KAAKuB,UAAU6B,+CAEhB,IAAAC,EACKrD,KAAKgC,MAAMhB,SAApBV,EADI+C,EACJ/C,EAAGC,EADC8C,EACD9C,EAET,OACED,IACAC,IACA+C,SAJarC,KAAKC,KAAKlB,KAAKgC,MAAMuB,UAKlCC,KAAMvC,KAAKC,KAAKZ,EAAIA,EAAIC,EAAIA,GAC5BuC,UAAW9C,KAAKqC,yDAGR,IAAAoB,EACKzD,KAAKoC,MAAMpB,SAApBV,EADImD,EACJnD,EAAGC,EADCkD,EACDlD,EACLyC,EAAShD,KAAKmC,YAAYnB,SAG1BsC,EAAWrC,KAAKC,KAAKlB,KAAKoC,MAAMmB,UACpC,OACEjD,EAAGA,EAAE0C,EAAO1C,EACZC,EAAGA,EAAEyC,EAAOzC,EACZ+C,mDAGW,IAAAI,EACE1D,KAAKiC,IAAIjB,SAExB,OACEV,EAJWoD,EACPpD,EAIJC,EALWmD,EACJnD,EAKP+C,SAJarC,KAAKC,KAAKlB,KAAKiC,IAAIsB,yCAO9BI,GACJ3D,KAAKgC,MAAM4B,QACX5D,KAAKgC,MAAMvB,KAAKkD,GAChB3D,KAAKiC,IAAI2B,QACT5D,KAAKiC,IAAIxB,MAAOH,EAAG,EAAGC,EAAG,IACzBP,KAAKsD,SAAW,uCAILO,EAAQT,GACnB,IAAIhB,GACF9B,EAAGuD,EAAOvD,EACVC,EAAGsD,EAAOtD,EACVuD,EAAGD,EAAOC,GAMRC,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,GAChBa,EAAKb,EAAW,GAChBc,EAAKd,EAAW,GAIhBe,EAAKD,EAAK9B,EAAM9B,EAAI0D,EAAK5B,EAAM0B,EAAIG,EAAK7B,EAAM7B,EAC9C6D,EAAKF,EAAK9B,EAAM7B,EAAI0D,EAAK7B,EAAM9B,EAAIyD,EAAK3B,EAAM0B,EAC9CO,EAAKH,EAAK9B,EAAM0B,EAAIC,EAAK3B,EAAM7B,EAAIyD,EAAK5B,EAAM9B,EAC9CgE,GAAMP,EAAK3B,EAAM9B,EAAI0D,EAAK5B,EAAM7B,EAAI0D,EAAK7B,EAAM0B,EAMnD,OAJA1B,EAAM9B,EAAI6D,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAChD5B,EAAM7B,EAAI6D,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAChD7B,EAAM0B,EAAIO,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EAEzC3B,WCjLUmC,aACnB,SAAAA,IAAcxE,IAAAC,KAAAuE,GACZvE,KAAKwE,YAAc,IAAIrD,EACvBnB,KAAKyE,aACHC,oBAAoB,EACpBC,WAAY,IACZC,QAAS,MAEX5E,KAAK6E,QAAUC,UAAUC,YAAYC,cACnChF,KAAKiF,6BAA6BpD,KAAK7B,MACvCA,KAAKkF,aAAarD,KAAK7B,MACvBA,KAAKyE,aAEPzE,KAAKmF,YAAc,aACnBnF,KAAKoF,iBAEH9E,EAAG+E,IACH9E,EAAG8E,IACHC,UAAWD,IACXE,SAAUF,IACV/B,SAAU+B,IACVG,SAAUH,IACVvC,UAAWuC,KAEbrF,KAAKyF,cAAiBnF,EAAG,EAAGC,EAAG,GAC/BP,KAAK0F,OAAQ,oDAGDC,GACZ3F,KAAKmF,YAAcQ,sCAGTA,GACV,IAAmB,IAAf3F,KAAK0F,MACPZ,UAAUC,YAAYa,mBACpB,SAAS3D,GACPjC,KAAKiF,6BAA6BhD,GADtB,IAAA4D,EAEa7F,KAAKoF,gBAAxB9E,EAFMuF,EAENvF,EAAGC,EAFGsF,EAEHtF,EAAG+C,EAFAuC,EAEAvC,SACZqC,GAAWrF,IAAGC,IAAG+C,cACjBzB,KAAK7B,MACPA,KAAKkF,aAAarD,KAAK7B,MACvBA,KAAKyE,iBAEF,KAAAqB,EACoB9F,KAAKoF,gBAAxB9E,EADDwF,EACCxF,EAAGC,EADJuF,EACIvF,EAAG+C,EADPwC,EACOxC,SACZqC,GAAWrF,IAAGC,IAAG+C,mEA4CQrB,GAC3B,IAGIqB,EAAWrB,EAAI8D,OAAOzC,SAJM0C,EAa5BhG,KAAKoF,gBANPtC,EAP8BkD,EAO9BlD,UACAyC,EAR8BS,EAQ9BT,SACAD,EAT8BU,EAS9BV,UACAE,EAV8BQ,EAU9BR,SACAlF,EAX8B0F,EAW9B1F,EACAC,EAZ8ByF,EAY9BzF,EAEE0F,EAAajG,KAAKkG,oBAAoBjE,EAAI8D,QAK9C,GAJIzC,EAdgB,IAgBlBA,EAhBkB,IAkBD,IAAftD,KAAK0F,MAEP5C,EAAYb,EAAIa,UAChByC,EAAWtD,EAAI8D,OAAOR,SACtBD,EAAYrD,EAAI8D,OAAOT,UACvBE,EAAWlC,EAAWA,EACtBhD,EAAI2F,EAAW3F,EACfC,EAAI0F,EAAW1F,EACfP,KAAK0F,OAAQ,MACR,CAGL,GADgBzD,EAAIa,UAAYA,EAChB,EAAG,CAEjB,IAAIqD,EAAoBnG,KAAKwE,YAAY4B,eAAe9C,SACxDkC,GAAYW,EAAoBA,EAEhCrD,EAAYb,EAAIa,UAIlB,IAAIuD,EAAcrG,KAAKwE,YAAY4B,eACV,OAArBnE,EAAI8D,OAAO/D,OAAyC,OAAvBC,EAAI8D,OAAOO,UAC1CtG,KAAKyF,cACHnF,EACE2B,EAAI8D,OAAO/D,MACXf,KAAKsF,IAAIvG,KAAKwG,QAAQvE,EAAI8D,OAAOO,SAAWrF,KAAKwF,GAAK,GACxDlG,EACE0B,EAAI8D,OAAO/D,MACXf,KAAKyF,IAAI1G,KAAKwG,QAAQvE,EAAI8D,OAAOO,SAAWrF,KAAKwF,GAAK,KAG5DzG,KAAKwE,YAAYmC,MAAM3G,KAAKyF,cAI5B,IAAImB,EAAIpB,GAAYA,EAAWlC,EAAWA,GAItCuD,GACFvG,EAAGA,EAAI+F,EAAY/F,EACnBC,EAAGA,EAAI8F,EAAY9F,GAErBD,GAAKsG,GAAKX,EAAW3F,EAAIuG,EAAYvG,GACrCC,GAAKqG,GAAKX,EAAW1F,EAAIsG,EAAYtG,GAErCiF,GAAY,EAAIoB,EAMlBtD,EAAWrC,KAAKC,KAAKsE,GACrBxF,KAAKoF,iBACH9E,IACAC,IACAgF,WACAD,YACAhC,WACAkC,WACA1C,aAEF9C,KAAKmF,aAAc7E,IAAGC,IAAG+C,kDAGdwD,GACXC,QAAQC,IAAR,gBAA4BF,EAAIG,KAAhC,IAAwCH,EAAII,2CAI5CpC,UAAUC,YAAYoC,WAAWnH,KAAK6E,qDAGpBkB,GAAQ,IACpBT,EAAwBS,EAAxBT,UAAWC,EAAaQ,EAAbR,SAEb6B,EAAI,OAYR,OAPA9B,EAAYtF,KAAKwG,QAAQlB,IAOhBhF,EAFD8G,GAJR7B,EAAWvF,KAAKwG,QAAQjB,IALN,EAWNhF,GAHH6G,EAAI9B,EAAYrE,KAAKsF,IAPX,MADD,oDAaKR,GAAQ,IAEzBT,EAAwBS,EAAxBT,UAAWC,EAAaQ,EAAbR,SAGX8B,EAAMrH,KAAKwG,QAAQlB,GACnBgC,EAAMtH,KAAKwG,QAAQjB,GAGnBgC,EAAI,QACJC,EAAI,eACJC,EAAQzH,KAAKwG,QAAQ,KACrBkB,EAAK,MAMPnF,EAAItB,KAAKC,KAAK,EAAKsG,EAAIA,GAAMD,EAAIA,IACjCI,EAAMpF,EAAIA,GAAM,EAAIA,EAAIA,GAExBqF,EAAKL,EAAItG,KAAKC,KAAK,EAAIqB,EAAIA,GAAKtB,KAAKyF,IAAIY,GAAOrG,KAAKyF,IAAIY,KACzDjH,EAAIgH,EAAMI,EAqCVlH,GAlCFgH,kBAmBID,EAbF,mBAcErG,KAAKyF,IAAI,EAAIY,GARf,mBASErG,KAAKyF,IAAI,EAAIY,GAPf,mBAQErG,KAAKyF,IAAI,EAAIY,GANT,qBAOJrG,KAAKyF,IAAI,EAAIY,IAENI,EACHA,EAAKE,EAAK3G,KAAKyF,IAAI,EAAIY,GAAQ,GAQtBjH,EAAIA,GANnBqH,EAAKE,EAAK3G,KAAKyF,IAAIY,GAAOrG,KAAK4G,IAAI5G,KAAKsF,IAAIe,GAAM,GAAM,IACzD,EACCrG,KAAK6G,IAAIR,GAAOrG,KAAK6G,IAAIR,GACzB,EAAIK,GAAM1G,KAAKsF,IAAIe,GAAOrG,KAAKsF,IAAIe,IAC9BK,EAAKA,EAAV,EAAgB1G,KAAK4G,IAAI5G,KAAKsF,IAAIe,GAAM,KAEVjH,EAAIA,EAAIA,EAAIA,GAS1CC,EAPKoH,EAAKE,EAAK3G,KAAKsF,IAAIe,GAOfjH,EALTqH,EAAKE,EAAK3G,KAAK4G,IAAI5G,KAAKsF,IAAIe,GAAM,GAAM,GACzC,EACCrG,KAAK6G,IAAIR,GAAOrG,KAAK6G,IAAIR,GACzBK,GAAM1G,KAAKsF,IAAIe,GAAOrG,KAAKsF,IAAIe,MAEZjH,EAAIA,EAAIA,GAvDpB,KA4DX,OAASC,EAHTA,GAvDoB,EA0DRC,EAFZA,GAxDoB,mCA4DdwH,GACN,OAAQA,EAAM9G,KAAKwF,GAAM,aCjRRuB,aACnB,SAAAA,EAAYC,GAASlI,IAAAC,KAAAgI,GACnBhI,KAAKkI,OAASD,EACdjI,KAAKmI,SAAY7G,UAAW,GAAIG,eAAgB,UAChDzB,KAAKoI,OAAS,IAAI5G,0BAA0BxB,KAAKmI,SACjDnI,KAAKoI,OAAOzG,iBACV,UACA3B,KAAKqI,oBAAoBxG,KAAK7B,OAEhCA,KAAKoI,OAAOzG,iBAAiB,QAAS3B,KAAKsI,kBAAkBzG,KAAK7B,OAElEA,KAAKoD,WAAa,IAAImF,IACtBvI,KAAKoI,OAAO9F,QAGZtC,KAAKwI,WAAa,IAAIjE,EACtBvE,KAAKwI,WAAWxD,cAAchF,KAAKyI,wBAAwB5G,KAAK7B,OAChEA,KAAKoF,iBACH9E,EAAG,EACHC,EAAG,GAELP,KAAK0I,aACHpI,EAAG,EACHC,EAAG,GAELP,KAAK2I,iBAAkB,4DAGvB3I,KAAKoD,WAAWwF,UAAU5I,KAAKoI,OAAOhF,wDAGd,oBAApByF,MAAMC,MAAMC,KACdhC,QAAQC,IAAI,2CAEZD,QAAQC,IAAR,kBAA8B6B,MAAMC,MAAMC,sDAGtB9G,GAAK,IACrB3B,EAAS2B,EAAT3B,EAAGC,EAAM0B,EAAN1B,GACoB,IAAzBP,KAAK2I,kBACP3I,KAAKoF,gBAAgB9E,EAAIA,EACzBN,KAAKoF,gBAAgB7E,EAAIA,EACzBP,KAAK2I,iBAAkB,GAEzB3I,KAAK0I,YAAYpI,EAAIA,EACrBN,KAAK0I,YAAYnI,EAAIA,mCAGrBP,KAAKkI,OAAO9E,WAAW4F,KAAKhJ,KAAKoD,YAIjCpD,KAAKoF,gBAAgB9E,EACnB,GAAcN,KAAKoF,gBAAgB9E,EAFzB,GAEqCN,KAAK0I,YAAYpI,EAClEN,KAAKoF,gBAAgB7E,EACnB,GAAcP,KAAKoF,gBAAgB7E,EAJzB,GAIqCP,KAAK0I,YAAYnI,EAClEP,KAAKkI,OAAOe,SAAS3I,EAAIN,KAAKoF,gBAAgB9E,EAC9CN,KAAKkI,OAAOe,SAAS1I,EAAIP,KAAKoF,gBAAgB7E,WCpClD2I,GACAH,KAAA,KACAI,KAFA,WAGA,OACAjB,OAAA,KACAkB,MAAA,KACAC,WAAA,KACAC,QAAA,KACAC,SAAA,KACAC,SAAA,KACAC,eAAA,KACAjB,WAAA,KACAkB,aAAA,IACAC,UAAA,MACAC,SAAA,EACAC,aAAA,IAGAC,SACAC,WAAA,WACA,IAAAC,EAAAhK,KACAA,KAAAiK,gBAAA,WACAD,EAAAH,aAAA,KAGAK,OAAA,WAWA,GAVAlK,KAAA4J,SAAA,EAUA5J,KAAAmK,MAAAC,QAAAC,YAAAC,OAAAC,YAAA,CAEA,IAAAC,EAAAF,OAAAC,YAAAH,QAAAC,YASArK,KAAA2J,UACA,IAAA1I,KAAAwF,GACA,EACAxF,KAAAwJ,KACAC,GAAAF,EAPA,IAYAxK,KAAAkI,OAAA,IAAAyC,EAAA,EACA3K,KAAA2J,UACAW,OAAAM,WAAAN,OAAAC,YACA,EACA,MAIAvK,KAAAkI,OAAAe,SAAA4B,IAAA,IAAA7K,KAAA0J,cAGA1J,KAAAwJ,SAAA,IAAAsB,EAAA9K,KAAAkI,QAEAlI,KAAAoJ,MAAA,IAAAuB,EAAA,EAQA,IAAAI,EAAA,IAAAJ,EAAA,EACA,IACA,IACA,KACA,IACA,IACA,GAEAK,EAAA,IAAAL,EAAA,GACAM,MAAA,SACAC,WAAA,IAEAlL,KAAAsJ,QAAA,IAAAqB,EAAA,EAAAI,EAAAC,GACAhL,KAAAsJ,QAAAL,SAAA4B,IAAA,OACA7K,KAAAoJ,MAAA+B,IAAAnL,KAAAsJ,SAIAtJ,KAAAoL,WAAA,IAAAT,EAAA,KACA3K,KAAAoL,WAAAnC,SAAA4B,IAAA,SACA7K,KAAAoJ,MAAA+B,IAAAnL,KAAAoL,YAGA,IAAAC,GAAA,IAAAV,EAAA,GAAAW,KACA,2BAEAtL,KAAAyJ,eAAA,IAAAkB,EAAA,GACAY,IAAAF,EACAJ,MAAA,WAGAjL,KAAAuJ,SAAA,IAAAoB,EAAA,GAAAa,WAAA,EAAAC,OAAA,IACAzL,KAAAuJ,SAAAmC,cAAApB,OAAAqB,kBACA3L,KAAAuJ,SAAAqC,QAAAtB,OAAAM,WAAAN,OAAAC,aACAvK,KAAAmK,MAAA0B,QAAAC,YAAA9L,KAAAuJ,SAAAwC,YAIAzB,OAAA3I,iBAAA,SAAA3B,KAAAgM,gBAAA,GACAhM,KAAAiM,WAEAA,QAAA,WACA3B,OAAA4B,sBAAAlM,KAAAiM,QAAApK,KAAA7B,OACAA,KAAAwJ,SAAA2C,SACAnM,KAAAoL,WAAAnC,SAAA3I,EAAAN,KAAAkI,OAAAe,SAAA3I,EACAN,KAAAoL,WAAAnC,SAAA1I,EAAAP,KAAAkI,OAAAe,SAAA1I,EACA,OAAAP,KAAAsJ,UAEAtJ,KAAAsJ,QAAAL,SAAA3I,EAAAN,KAAAkI,OAAAe,SAAA3I,EACAN,KAAAsJ,QAAAL,SAAA1I,EAAAP,KAAAkI,OAAAe,SAAA1I,GAEAP,KAAAuJ,SAAA6C,OAAApM,KAAAoJ,MAAApJ,KAAAkI,SAEAmE,UAAA,eAAAC,EACAtM,KAAAkI,OAAAe,SAAA3I,EADAgM,EACAhM,EAAAC,EADA+L,EACA/L,EACAgM,EAAA,IAAA5B,EAAA,EAAAlB,gBACA8C,EAAAtD,SAAA4B,IAAAvK,EAAAC,EAAA,GACAgM,EAAAC,MAAA3B,IAAA,UACA7K,KAAAoJ,MAAA+B,IAAAoB,IAEAP,eAAA,WAEA/B,gBAAA,WACA/B,OAAAuE,OAAAnC,OAAAM,WAAAN,OAAAC,YACArC,OAAAwE,yBAEAnD,SAAAqC,QAAAtB,OAAAM,WAAAN,OAAAC,gBAGAN,gBAAA,SAAAtE,GACAb,UAAA6H,aAAAC,cACA9H,UAAA6H,aACAC,cACAC,OAEAC,QAAAC,IAAAzC,OAAAC,aACAyC,YAAAC,MAAA,kBAGAC,KACA,SAAAC,GACAnN,KAAAmK,MAAAC,QAAAgD,UAAAD,EACAxH,KACA9D,KAAA7B,OAEAqN,MAAA,SAAAvE,GACA/B,QAAAC,IAAA8B,GACAwE,MAAA,wBAAAxE,EAAAC,KAAA,IAAAD,EAAAyE,gBAKAC,QAzKA,WA0KAxN,KAAA+J,eC/Le0D,GADErB,OAFjB,WAA0B,IAAAsB,EAAA1N,KAAa2N,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BE,IAAA,UAAAC,OAAqBC,GAAA,aAAgBJ,EAAA,SAAcE,IAAA,UAAAC,OAAqBE,SAAA,GAAAD,GAAA,eAA8BP,EAAAS,GAAA,KAAAN,EAAA,OAA0BG,OAAOC,GAAA,aAAgBP,EAAA7D,cAAA6D,EAAA9D,QAAAiE,EAAA,OAA8CE,IAAA,QAAAK,YAAA,MAAAC,IAAkCC,MAAAZ,EAAAxD,UAAoBwD,EAAAS,GAAA,yBAAAT,EAAAa,KAAAb,EAAAS,GAAA,KAA+IT,EAAAa,UAE7eC,oBCCjB,IAuBeC,EAvBUC,EAAQ,OAcjCC,CACEzF,EACAuE,GATF,EAVA,SAAAmB,GACEF,EAAQ,SAaV,KAEA,MAUgC,oBCtBhCG,IAAIC,IAAIC,KAEO,IAAIA,KACjBC,SAEIC,KAAM,IACNlG,KAAM,KACNmG,UAAWC,MCLjB,IAAIN,KACFO,GAAI,UACJC,YAAcC,eAAgBH","file":"static/js/app.cd0fa85deb75ba960f24.js","sourcesContent":["export default class MovingAverage2D {\n  constructor(_size) {\n    this.windowSize = _size;\n    this.queue = new Array();\n  }\n  push(_p) {\n    let p = {\n      x: _p.x,\n      y: _p.y\n    };\n    if (this.queue.length < this.windowSize) {\n      this.queue.push(p);\n    } else {\n      this.queue.shift();\n      this.queue.push(p);\n    }\n  }\n  getAvg() {\n    if (this.queue.length === 0) throw \"Lenght of queue is zero\";\n    var n = this.queue.length;\n    return this.queue.reduce(\n      function(acc, p) {\n        acc[\"x\"] += p.x / n;\n        acc[\"y\"] += p.y / n;\n        return acc;\n      },\n      { x: 0, y: 0 }\n    );\n  }\n  getVar() {\n    if (this.queue.length === 0) throw \"Lenght of queue is zero\";\n    let n = this.queue.length;\n    let x_square = this.queue.reduce((acc, p) => {\n      return acc + p.x * p.x;\n    }, 0);\n    let avg = this.getAvg();\n    return x_square / n - avg.x * avg.x;\n  }\n  getLast() {\n    if (this.queue.length === 0) throw \"Lenght of queue is zero\";\n    return this.queue[this.queue.length - 1];\n  }\n  len() {\n    return this.queue.length;\n  }\n  flush(){\n    this.queue = [];\n  }\n  _norm(p) {\n    return Math.sqrt(p.x * p.x + p.y * p.y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/moving_average_2d.js","import MovingAverage2D from \"./moving_average_2d.js\";\n\nexport default class Absolute2DSpeedSensor {\n  constructor() {\n    this.laSensor = new LinearAccelerationSensor({ frequency: 60 });\n    this.oriSensor = new AbsoluteOrientationSensor({\n      frequency: 60,\n      referenceFrame: \"device\"\n    });\n\n    this.windowSize = 32; //How many samples in one window\n    this.offsetWindowSize = 256; //How many samples in one offset window\n    this.laSensor.addEventListener(\"reading\", this.onReading.bind(this));\n    this.oriSensor.addEventListener(\"reading\", this.onOriReading.bind(this));\n    this.ori = [0, 0, 0, 0];\n\n    this.speed = new MovingAverage2D(this.windowSize);\n    this.pos = new MovingAverage2D(this.windowSize);\n    this.lastAccel = {x:0,y:0};\n    this.accelOffset = new MovingAverage2D(this.offsetWindowSize);\n    this.accel = new MovingAverage2D(this.windowSize);\n    this.speed.push({ x: 0, y: 0 }); //Start from zero speed\n    this.pos.push({ x: 0, y: 0 }); //Start from (0,0)\n\n    this.lastSensorTimeStamp = -1;\n    this.laSensor.start();\n    this.oriSensor.start();\n  }\n  onReading(e) {\n    function integral(p, p1, p2, dt) {\n      return {\n        x: p.x + ((p1.x + p2.x) / 2) * dt,\n        y: p.y + ((p1.y + p2.y) / 2) * dt\n      };\n    }\n    let newAccel = this.correctAccel(this.laSensor, this.ori);\n\n    if (this.lastSensorTimeStamp === -1) {\n      this.lastSensorTimeStamp = this.laSensor.timestamp;\n      this.accel.push(newAccel);\n      this.accelOffset.push(newAccel);\n    } else {\n      let dt = (this.laSensor.timestamp - this.lastSensorTimeStamp) / 1000;\n      this.accel.push(newAccel);\n      this.accelOffset.push(newAccel);\n      if(this.accel.len() === this.windowSize){\n        newAccel = this.accel.getAvg();\n        let offset = this.accelOffset.getAvg();\n        newAccel.x -= offset.x;\n        newAccel.y -= offset.y;\n\n        //Integrate speed\n        let newSpeed = integral(\n          this.speed.getLast(),\n          this.lastAccel,\n          newAccel,\n          dt\n        );\n        this.speed.push(newSpeed);\n\n        //Integrate position\n        let newPos = integral(\n          this.pos.getLast(),\n          this.speed.getLast(),\n          newSpeed,\n          dt\n        );\n        this.pos.push(newPos);\n        this.lastAccel = newAccel;\n      }\n      this.lastSensorTimeStamp = this.laSensor.timestamp;\n    }\n\n    // //Reset condition\n    // const threshold_a = 0.07; // minimal acceleration\n    // if (\n    //   Math.sqrt(accel.x * accel.x + accel.y * accel.y) <\n    //   threshold_a\n    // ) {\n    //   accel.x = 0;\n    //   accel.y = 0;\n    //   this.speed.x = 0;\n    //   this.speed.y = 0;\n    //   this.pos.x = 0;\n    //   this.pos.y = 0;\n    // }\n    // if (this.lastSensorTimeStamp === -1) {\n    //   this.lastSensorTimeStamp = this.laSensor.timestamp;\n    //   this.lastAccel.x = accel.x;\n    //   this.lastAccel.y = accel.y;\n    // } else {\n    //   const timeDiff =\n    //     (this.laSensor.timestamp - this.lastSensorTimeStamp) / 1000;\n    //   //Integral speed\n    //   let lastSpeed = Object.assign({}, this.speed);\n    //   this.speed.x += ((this.lastAccel.x + accel.x) / 2) * timeDiff;\n    //   this.speed.y += ((this.lastAccel.y + accel.y) / 2) * timeDiff;\n\n    //   //Integral position\n    //   this.pos.x += ((lastSpeed.x + this.speed.x) / 2) * timeDiff;\n    //   this.pos.y += ((lastSpeed.y + this.speed.y) / 2) * timeDiff;\n\n    //   this.lastAccel = accel;\n    //   const accuracyFactor = 20; //Expermental value on Google Pixel 2\n    //   this.accuracy += timeDiff / accuracyFactor;\n    //   this.lastSensorTimeStamp = this.laSensor.timestamp;\n    //}\n  }\n  onOriReading() {\n    this.ori = this.oriSensor.quaternion;\n  }\n  readSpeed() {\n    let { x, y } = this.speed.getAvg();\n    let accuracy = Math.sqrt(this.speed.getVar());\n    return {\n      x,\n      y,\n      accuracy,\n      norm: Math.sqrt(x * x + y * y),\n      timestamp: this.lastSensorTimeStamp\n    };\n  }\n  readAccel() {\n    let { x, y } = this.accel.getAvg();\n    let offset = this.accelOffset.getAvg();\n    // alert(JSON.stringify(this.accel.getAvg()));\n    // alert(this.accel.getCov());\n    let accuracy = Math.sqrt(this.accel.getVar());\n    return {\n      x: x-offset.x,\n      y: y-offset.y,\n      accuracy\n    };\n  }\n  readPosition() {\n    let { x, y } = this.pos.getAvg();\n    let accuracy = Math.sqrt(this.pos.getVar());\n    return {\n      x,\n      y,\n      accuracy\n    };\n  }\n  reset(_speed) {\n    this.speed.flush();\n    this.speed.push(_speed);\n    this.pos.flush();\n    this.pos.push({ x: 0, y: 0 });\n    this.accuracy = 0;\n  }\n\n  // Correct acceleration to absolute coordinate\n  correctAccel(_accel, quaternion) {\n    let accel = {\n      x: _accel.x,\n      y: _accel.y,\n      z: _accel.z\n    };\n\n    // ============================================\n    // |Correct acceleration by device orientation|\n    // ============================================\n    let qx = quaternion[0];\n    let qy = quaternion[1];\n    let qz = quaternion[2];\n    let qw = quaternion[3];\n\n    // accel = q*accel*(q^-1)\n\n    let ix = qw * accel.x + qy * accel.z - qz * accel.y;\n    let iy = qw * accel.y + qz * accel.x - qx * accel.z;\n    let iz = qw * accel.z + qx * accel.y - qy * accel.x;\n    let iw = -qx * accel.x - qy * accel.y - qz * accel.z;\n\n    accel.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    accel.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    accel.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return accel;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/absolute_2d_speed_sensor.js","import Absolute2DSpeedSensor from \"./absolute_2d_speed_sensor.js\";\nexport default class Geolocator {\n  constructor() {\n    this.speedSensor = new Absolute2DSpeedSensor();\n    this.geo_options = {\n      enableHighAccuracy: true,\n      maximumAge: 30000,\n      timeout: 27000\n    };\n    this.watchID = navigator.geolocation.watchPosition(\n      this._updateCurrentPositionKalman.bind(this),\n      this._handleError.bind(this),\n      this.geo_options\n    );\n    this.posUpdateCB = () => {}; //Callback that called when position update\n    this.currentPosition = {\n      //The object to store estamated position\n      x: NaN,\n      y: NaN,\n      longitude: NaN,\n      latitude: NaN,\n      accuracy: NaN,\n      variance: NaN,\n      timestamp: NaN\n    };\n    this.speedFromGPS = { x: 0, y: 0 };\n    this.ready = false; //Whether the currentPosition is valid\n  }\n\n  watchPosition(callback) {\n    this.posUpdateCB = callback;\n  }\n\n  getPosition(callback) {\n    if (this.ready === false) {\n      navigator.geolocation.getCurrentPosition(\n        function(pos) {\n          this._updateCurrentPositionKalman(pos);\n          let { x, y, accuracy } = this.currentPosition;\n          callback({ x, y, accuracy });\n        }.bind(this),\n        this._handleError.bind(this),\n        this.geo_options\n      );\n    } else {\n      let { x, y, accuracy } = this.currentPosition;\n      callback({ x, y, accuracy });\n    }\n  }\n\n  // _updateCurrentPosition(pos) {\n  //   var alpha = 0; //The adaptive value to trust new value\n  //   if (this.ready === false) {\n  //     let { x, y } = this._convertGeolocationTWD97(pos.coords);\n  //     this.currentPosition = {\n  //       x,\n  //       y,\n  //       longitude: pos.coords.longitude,\n  //       latitude: pos.coords.latitude,\n  //       accuracy: pos.coords.accuracy\n  //     };\n  //     this.ready = true;\n  //   } else {\n  //     //Adaptive exponential smoothing\n  //     const minAccuracy = 1; //The minimal accuracy value\n  //     const maxAccuracy = 30; //The maximal accuracy value\n  //     const maxAlpha = 0.8; //Trust 80% old value at most\n  //     if (pos.coords.accuracy < minAccuracy) {\n  //       alpha = 0; //Trust new value\n  //     } else if (pos.coords.accuracy > maxAccuracy) {\n  //       alpha = maxAlpha; //Trust 80% old value, 20% new value\n  //     } else {\n  //       //Linear value\n  //       alpha =\n  //         ((pos.coords.accuracy - minAccuracy) / (maxAccuracy - minAccuracy)) *\n  //         maxAlpha;\n  //     }\n  //     let { x, y } = this._convertGeolocationTWD97(pos.coords);\n  //     pos.coords[\"x\"] = x;\n  //     pos.coords[\"y\"] = y;\n  //     for (let i in this.currentPosition) {\n  //       let oldValue = this.currentPosition[i];\n  //       let newValue = pos.coords[i];\n  //       this.currentPosition[i] = oldValue * alpha + newValue * (1 - alpha);\n  //     }\n  //   }\n  //   let { x, y, accuracy } = this.currentPosition;\n  //   this.posUpdateCB({ x, y, accuracy });\n  // }\n\n  _updateCurrentPositionKalman(pos) {\n    const minAccuracy = 1;\n    //let Q_metres_per_second = this.speedSensor.readSpeed().norm; //Adjuest this value by speed\n    //let Q_metres_per_second = 10; //Adjuest this value by speed\n    let accuracy = pos.coords.accuracy; //The uncertainty of this mesurement\n    //Read previous estimatation\n    let {\n      timestamp,\n      latitude,\n      longitude,\n      variance,\n      x,\n      y\n    } = this.currentPosition;\n    let xy_measure = this._convertGeolocation(pos.coords);\n    if (accuracy < minAccuracy) {\n      //Cut off the accuracy\n      accuracy = minAccuracy;\n    }\n    if (this.ready === false) {\n      // If object is unitialised,initialise with current values\n      timestamp = pos.timestamp;\n      latitude = pos.coords.latitude;\n      longitude = pos.coords.longitude;\n      variance = accuracy * accuracy;\n      x = xy_measure.x;\n      y = xy_measure.y;\n      this.ready = true;\n    } else {\n      // else apply Kalman filter methodology\n      let diff_time = pos.timestamp - timestamp;\n      if (diff_time > 0) {\n        // time has moved on, so the uncertainty in the current position increases\n        let sensorPosAccuracy = this.speedSensor.readPosition().accuracy;\n        variance += sensorPosAccuracy * sensorPosAccuracy;\n        //  (diff_time * Q_metres_per_second * Q_metres_per_second) / 1000;\n        timestamp = pos.timestamp;\n      }\n      //TODO: Use covararience instead of varaience\n\n      let posBySensor = this.speedSensor.readPosition();\n      if (pos.coords.speed !== null && pos.coords.heading !== null) {\n        this.speedFromGPS = {\n          x:\n            pos.coords.speed *\n            Math.cos(this.radians(pos.coords.heading) + Math.PI / 2),\n          y:\n            pos.coords.speed *\n            Math.sin(this.radians(pos.coords.heading) + Math.PI / 2)\n        };\n      }\n      this.speedSensor.reset(this.speedFromGPS);\n\n      // Kalman gain matrix K = Covarariance * Inverse(Covariance + MeasurementVariance)\n      // NB: because K is dimensionless, it doesn't matter that variance has different units to lat and lng\n      let K = variance / (variance + accuracy * accuracy);\n      // apply K\n      //longitude += K * (pos.coords.longitude - longitude);\n      //latitude += K * (pos.coords.latitude - latitude);\n      let xy_estimate = {\n        x: x + posBySensor.x,\n        y: y + posBySensor.y\n      };\n      x += K * (xy_measure.x - xy_estimate.x);\n      y += K * (xy_measure.y - xy_estimate.y);\n      // new Covarariance  matrix is (IdentityMatrix - K) * Covarariance\n      variance = (1 - K) * variance;\n      //let estimate_xy = this._convertGeolocationTWD97({ longitude, latitude });\n      //x = estimate_xy.x;\n      //y = estimate_xy.y;\n    }\n    //Write back estimation\n    accuracy = Math.sqrt(variance);\n    this.currentPosition = {\n      x,\n      y,\n      latitude,\n      longitude,\n      accuracy,\n      variance,\n      timestamp\n    };\n    this.posUpdateCB({ x, y, accuracy });\n  }\n\n  _handleError(err) {\n    console.log(`[Geolocator] ${err.code} ${err.message}`);\n  }\n\n  detatch() {\n    navigator.geolocation.clearWatch(this.watchID);\n  }\n\n  _convertGeolocation(coords) {\n    let { longitude, latitude } = coords;\n\n    let r = 6371000; //Radius of earth (m);\n    let scaleFactor = 1;\n    let baseLatitude = 23.5;\n\n    //Degree to radians\n    longitude = this.radians(longitude);\n    latitude = this.radians(latitude);\n\n    //For small area, euqalrectangular projection is fine.\n    let y = -r * longitude * Math.cos(baseLatitude) * scaleFactor;\n    let x = r * latitude * scaleFactor;\n\n    return { x, y };\n  }\n  _convertGeolocationTWD97(coords) {\n    //Reference: http://blog.ez2learn.com/2009/08/15/lat-lon-to-twd97/\n    let { longitude, latitude } = coords;\n\n    //Convert to radians\n    const lon = this.radians(longitude);\n    const lat = this.radians(latitude);\n\n    //Some constant\n    const a = 6378137.0;\n    const b = 6356752.314245;\n    const long0 = this.radians(121); //Centeral longitude\n    const k0 = 0.9999;\n    const dx = 250000;\n\n    const scaleFactor = 1;\n\n    //Magic\n    let e = Math.sqrt(1 - (b * b) / (a * a));\n    let e2 = (e * e) / (1 - e * e);\n    let n = (a - b) / (a + b);\n    let nu = a / Math.sqrt(1 - e * e * (Math.sin(lat) * Math.sin(lat)));\n    let p = lon - long0;\n\n    let A =\n      a *\n      (1 -\n        n +\n        (5 / 4.0) * (n * n - n * n * n) +\n        (81 / 64.0) * (n * n * n * n - n * n * n * n * n));\n    let B =\n      ((3 * a * n) / 2.0) *\n      (1 -\n        n +\n        (7 / 8.0) * (n * n - n * n * n) +\n        (55 / 64.0) * (n * n * n * n - n * n * n * n * n));\n    let C =\n      ((15 * a * (n * n)) / 16.0) * (1 - n + (3 / 4.0) * (n * n - n * n * n));\n    let D =\n      ((35 * a * (n * n * n)) / 48.0) *\n      (1 - n + (11 / 16.0) * (n * n - n * n * n));\n    let E = ((315 * a * (n * n * n * n)) / 51.0) * (1 - n);\n\n    let S =\n      A * lat -\n      B * Math.sin(2 * lat) +\n      C * Math.sin(4 * lat) -\n      D * Math.sin(6 * lat) +\n      E * Math.sin(8 * lat);\n\n    let K1 = S * k0;\n    let K2 = (k0 * nu * Math.sin(2 * lat)) / 4.0;\n    let K3 =\n      ((k0 * nu * Math.sin(lat) * Math.pow(Math.cos(lat), 3)) / 24.0) *\n      (5 -\n        Math.tan(lat) * Math.tan(lat) +\n        9 * e2 * (Math.cos(lat) * Math.cos(lat)) +\n        4 * (e2 * e2) * Math.pow(Math.cos(lat), 4));\n\n    let y = K1 + K2 * (p * p) + K3 * (p * p * p * p);\n\n    let K4 = k0 * nu * Math.cos(lat);\n    let K5 =\n      ((k0 * nu * Math.pow(Math.cos(lat), 3)) / 6.0) *\n      (1 -\n        Math.tan(lat) * Math.tan(lat) +\n        e2 * (Math.cos(lat) * Math.cos(lat)));\n\n    let x = K4 * p + K5 * (p * p * p) + dx;\n\n    x = x * scaleFactor;\n    y = y * scaleFactor;\n\n    return { x, y };\n  }\n  radians(deg) {\n    return (deg * Math.PI) / 180;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/geolocator.js","import * as THREE from \"three\";\nimport Geolocator from \"./geolocator.js\";\n\nexport default class GeolocationARControls {\n  constructor(_camera) {\n    this.camera = _camera;\n    this.options = { frequency: 60, referenceFrame: \"device\" };\n    this.sensor = new AbsoluteOrientationSensor(this.options);\n    this.sensor.addEventListener(\n      \"reading\",\n      this.handleSensorReading.bind(this)\n    );\n    this.sensor.addEventListener(\"error\", this.handleSensorError.bind(this));\n    //Place to store quaternion\n    this.quaternion = new THREE.Quaternion();\n    this.sensor.start();\n\n    //Use geolocator to relocate camera\n    this.geolocator = new Geolocator();\n    this.geolocator.watchPosition(this.handleGeolocationUpdate.bind(this));\n    this.currentPosition = {\n      x: 0,\n      y: 0\n    };\n    this.newPosition = {\n      x: 0,\n      y: 0\n    };\n    this.isLocationFixed = false;\n  }\n  handleSensorReading() {\n    this.quaternion.fromArray(this.sensor.quaternion);\n  }\n  handleSensorError() {\n    if (event.error.name == \"NotReadableError\") {\n      console.log(\"[GeoAR control]Sensor is not available.\");\n    } else {\n      console.log(`[GeoAR control]${event.error.name}`);\n    }\n  }\n  handleGeolocationUpdate(pos) {\n    let { x, y } = pos;\n    if (this.isLocationFixed === false) {\n      this.currentPosition.x = x;\n      this.currentPosition.y = y;\n      this.isLocationFixed = true;\n    }\n    this.newPosition.x = x;\n    this.newPosition.y = y;\n  }\n  update() {\n    this.camera.quaternion.copy(this.quaternion);\n\n    //Update position: exponential filter\n    let alpha = 0.5; //How new value will be taken\n    this.currentPosition.x =\n      (1 - alpha) * this.currentPosition.x + alpha * this.newPosition.x;\n    this.currentPosition.y =\n      (1 - alpha) * this.currentPosition.y + alpha * this.newPosition.y;\n    this.camera.position.x = this.currentPosition.x;\n    this.camera.position.y = this.currentPosition.y;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/geolocation_ar_controls.js","<template>\n  <div>\n    <div id=\"content\" ref=\"content\">\n      <video autoplay id=\"capture\" ref=\"capture\"></video>\n    </div>\n    <div id=\"overlay\">\n      <div\n        class=\"btn\"\n        ref=\"start\"\n        v-on:click=\"initAR\"\n        v-if=\"cameraReady && !started\"\n      >\n        Start\n      </div>\n      <div class=\"btn\" ref=\"add\" v-on:click=\"addMarker\" v-if=\"false && started\">\n        Add Marker\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n//Reference: https://stackoverflow.com/questions/47849626/import-and-use-three-js-library-in-vue-component\nimport * as THREE from \"three\";\nimport GeolocationARControls from \"../lib/geolocation_ar_controls.js\";\nexport default {\n  name: \"AR\",\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      axisHepler: null,\n      vground: null,\n      renderer: null,\n      controls: null,\n      spriteMaterial: null,\n      geolocator: null,\n      cameraHeight: 1.4, //Distance between camera and ground\n      cameraFoV: 67.35, //Average value for mobile\n      started: false,\n      cameraReady: false\n    };\n  },\n  methods: {\n    initCamera: function() {\n      var self = this;\n      this.getCameraStream(function() {\n        self.cameraReady = true;\n      });\n    },\n    initAR: function() {\n      this.started = true;\n\n      //==================Camera and Control=============================================\n      //                                                                                |\n      //This camera is expect to have the same FoV and height with the camera on device |\n      //The controller rotate camera accroding to device orientation                    |\n      //                                                                                |\n      //================================================================================|\n\n      //If the video had been croped, adjuest FoV\n      if (this.$refs.capture.videoHeight > window.innerHeight) {\n        //How much video had been croped\n        let scaleFactor = window.innerHeight / capture.videoHeight;\n\n        //Full-frame CCD (36mm)\n        let referenceCCDSize = 36;\n\n        //27mm is the average equivalent focal length on mobile phone\n        let referenceFocalLength = 27;\n\n        //Calculate the new FoV by the definition.\n        this.cameraFoV =\n          (180 / Math.PI) *\n          2 *\n          Math.atan(\n            ((referenceCCDSize / 2) * scaleFactor) / referenceFocalLength\n          );\n      }\n\n      //Make a camera that have equivlent FoV of device's camera\n      this.camera = new THREE.PerspectiveCamera(\n        this.cameraFoV, //Calcualted FoV.\n        window.innerWidth / window.innerHeight, //Aspect ratio\n        1, //Near plate\n        1100 //Far plate\n      );\n\n      //Adjuest the camera to the height of the device's camera.\n      this.camera.position.set(0, 0, this.cameraHeight);\n\n      //This controller will track the orientation of device in the earth coordinate system.\n      this.controls = new GeolocationARControls(this.camera);\n\n      this.scene = new THREE.Scene();\n\n      //==================Virtual Ground Object===================\n      //                                                         |\n      //This object is a reference ground object while debugging |\n      //It's been placed at below the camera                     |\n      //                                                         |\n      //==========================================================\n      var groundGeometry = new THREE.BoxBufferGeometry(\n        1000,\n        1000,\n        0.001,\n        100,\n        100,\n        1\n      );\n      var groundMaterial = new THREE.MeshBasicMaterial({\n        color: 0xaaaaaa,\n        wireframe: true\n      });\n      this.vground = new THREE.Mesh(groundGeometry, groundMaterial);\n      this.vground.position.set(0, 0, 0);\n      this.scene.add(this.vground);\n      //================End Virtual Ground Object=================\n\n      //An axes helper\n      this.axesHelper = new THREE.AxesHelper(1);\n      this.axesHelper.position.set(10, 10, 5);\n      this.scene.add(this.axesHelper);\n\n      //Add markers to the scene\n      const spriteMap = new THREE.TextureLoader().load(\n        \"./media/placeholder.png\"\n      );\n      this.spriteMaterial = new THREE.SpriteMaterial({\n        map: spriteMap,\n        color: 0xffffff\n      });\n\n      this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.$refs.content.appendChild(this.renderer.domElement);\n\n      //\n\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n      this.animate();\n    },\n    animate: function() {\n      window.requestAnimationFrame(this.animate.bind(this));\n      this.controls.update();\n      this.axesHelper.position.x = this.camera.position.x;\n      this.axesHelper.position.y = this.camera.position.y;\n      if (this.vground !== null) {\n        //Fix the position of vground relative to camera\n        this.vground.position.x = this.camera.position.x;\n        this.vground.position.y = this.camera.position.y;\n      }\n      this.renderer.render(this.scene, this.camera);\n    },\n    addMarker: function() {\n      let {x, y} = this.camera.position;\n      let sprite = new THREE.Sprite(spriteMaterial);\n      sprite.position.set(x, y, 0);\n      sprite.scale.set(0.5, 0.5, 0.5);\n      this.scene.add(sprite);\n    },\n    onWindowResize: function() {\n      //Resize the video stream from webcam\n      getCameraStream(() => {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n      });\n    },\n    getCameraStream: function(callback) {\n      if (navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices\n          .getUserMedia({\n            video: {\n              //width: window.innerWidth,\n              height: { min: window.innerHeight },\n              facingMode: { exact: \"environment\" }\n            }\n          })\n          .then(\n            function(stream) {\n              this.$refs.capture.srcObject = stream;\n              callback();\n            }.bind(this)\n          )\n          .catch(function(error) {\n            console.log(error);\n            alert(`Get webcam error:\\n  ${error.name}:${error.constraint}`);\n          });\n      }\n    }\n  },\n  created() {\n    this.initCamera();\n  }\n};\n</script>\n\n<style>\n#overlay {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n}\n.btn {\n  padding: 1em;\n  box-sizing: border-box;\n  border: solid black 1px;\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n#content {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n#content video,\ncanvas {\n  /* Make video to at least 100% wide and tall */\n  min-width: 100%;\n  min-height: 100%;\n\n  /* Setting width & height to auto prevents the browser from stretching or squishing the video */\n  width: auto;\n  height: auto;\n\n  /* Center the video */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/ar-component.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"content\",attrs:{\"id\":\"content\"}},[_c('video',{ref:\"capture\",attrs:{\"autoplay\":\"\",\"id\":\"capture\"}})]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"overlay\"}},[(_vm.cameraReady && !_vm.started)?_c('div',{ref:\"start\",staticClass:\"btn\",on:{\"click\":_vm.initAR}},[_vm._v(\"\\n      Start\\n    \")]):_vm._e(),_vm._v(\" \"),(false && _vm.started)?_c('div',{ref:\"add\",staticClass:\"btn\",on:{\"click\":_vm.addMarker}},[_vm._v(\"\\n      Add Marker\\n    \")]):_vm._e()])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-39e597dc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ar-component.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-39e597dc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ar-component.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ar-component.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ar-component.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-39e597dc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ar-component.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ar-component.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport ARComponent from '@/components/ar-component'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'AR',\n      component: ARComponent\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport ARComponent from './components/ar-component.vue'\nimport router from './router'\n\nnew Vue({\n  el: \"#my-app\",\n  components: { \"ar-component\": ARComponent }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}